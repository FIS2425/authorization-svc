openapi: 3.0.0
info:
  title: Authorization Microservice
  version: 1.0.0
  description: Authorization microservice for medical consultation application. Handles the authorization of users for the entire application.

servers:
  - url: http://localhost:3001

paths:
  /users:
    post:
      summary: Create a new user
      description: Creates a new user in the system. Only users with the "clinicadmin" role are authorized to create new users.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username for the new user.
                  example: "new_user"
                password:
                  type: string
                  description: The password for the new user.
                  example: "new_password123"
                roles:
                  type: array
                  description: The roles assigned to the new user.
                  items:
                    type: string
                    enum:
                      - admin
                      - clinicadmin
                      - doctor
                      - patient
                  example: ["doctor"]
                doctorid:
                  type: string
                  description: The ID of the doctor associated with the user, if applicable.
                  example: "doctor12345"
                patientid:
                  type: string
                  description: The ID of the patient associated with the user, if applicable.
                  example: "patient12345"
              required:
                - username
                - password
                - roles
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    format: uuid
                    description: Unique identifier for the created user.
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  username:
                    type: string
                    description: The username of the created user.
                    example: "new_user"
                  roles:
                    type: array
                    description: The roles assigned to the created user.
                    items:
                      type: string
                      enum:
                        - admin
                        - clinicadmin
                        - doctor
                        - patient
                    example: ["doctor"]
                  doctorid:
                    type: string
                    nullable: true
                    description: The doctor ID associated with the user.
                    example: "doctor12345"
                  patientid:
                    type: string
                    nullable: true
                    description: The patient ID associated with the user.
                    example: "patient12345"
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the user was created.
                    example: "2023-10-25T08:40:51.620Z"
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the user was last updated.
                    example: "2023-10-26T08:40:51.620Z"
        '400':
          description: Bad Request - Missing required fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username and password are required fields."
        '401':
          description: Unauthorized - No authentication token found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "You must be logged in to create a new user."
        '403':
          description: Forbidden - Insufficient permissions to create a user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "You do not have permission to create a new user. Only clinic administrators can create new users."
        '500':
          $ref: '#/components/responses/ServerError'
      

  /login:
    post:
      summary: User Login
      description: Authenticates a user with their username and password.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user's unique username.
                  example: "admin_user"
                password:
                  type: string
                  description: The user's password.
                  example: "admin123"
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
        '401':
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
        '500':
          $ref: '#/components/responses/ServerError'

  /logout:
    post:
      summary: User Logout
      description: Logs out a user by clearing authentication tokens.
      tags:
        - Authentication
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
        '401':
          description: Unauthorized - user is not logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Not logged in"
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          description: Unique identifier for the user. Defaults to a generated UUID.
          example: "550e8400-e29b-41d4-a716-446655440000"
        username:
          type: string
          description: Unique username for the user.
          example: "john_doe"
        password:
          type: string
          description: Hashed password of the user.
        roles:
          type: array
          description: List of roles assigned to the user.
          items:
            type: string
            enum:
              - admin
              - clinicadmin
              - doctor
              - patient
          default: ["patient"]
          example: ["doctor", "clinicadmin"]
        doctorid:
          type: string
          nullable: true
          description: Identifier of the doctor if the user is a clinic doctor.
          example: "doctor12345"
        patientid:
          type: string
          nullable: true
          description: Identifier of the patient if the user is associated with a patient record.
          example: "patient12345"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the user was created.
          example: "2023-10-25T08:40:51.620Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the user was last updated.
          example: "2023-10-26T08:40:51.620Z"
      required:
        - username
        - password
        - roles
      description: Schema for the User model, including fields for unique ID, username, password, role, and optional associations with patient and clinic.

  securitySchemes:
    # Define any security schemes if relevant (e.g., JWT authentication).

  # Add other reusable components here (e.g., responses, request bodies).
  responses:
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Server error"
